source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
source('~/actr.R')
setwd("~/Documents/Research/Antelope/Raw/5mins_Eyes_Closed_EEG")
library(tidyverse)
library(kableExtra)
library(xtable)
library(data.table)
library(ggplot2)
library(ggthemes)
library(ggExtra)
library(colorspace)
library(RColorBrewer)
library(gridExtra)
library(ggdendro)
source("../../QEEG_Emotiv_Analysis_Rscript.R")
knitr::opts_chunk$set(echo = TRUE)
behav <- read_tsv("../../behav_data.txt", col_types=cols())
behav$material[behav$material=="Swahili"] <- "Vocabulary"
behav$material[behav$material=="US Maps"] <- "Maps"
behav <- behav %>% rename(Gender = gender, Age = age)
wbehav <- behav %>% pivot_wider(values_from = alpha,
id_cols = c(Subject, Gender, Age),
names_from = material)
ggplot(data=wbehav, aes(x=Age, col=Gender)) +
geom_histogram(aes(col="white", fill=Gender), colour="white", alpha=0.5, position="identity", binwidth = 1) +
#geom_density(aes(fill=Gender), colour="black", position="dodge", bw=1,  alpha=0.5) +
scale_color_brewer(palette = "Set1") +
scale_fill_brewer(palette = "Set1") +
ggtitle("Age Distribution by Gender")
#geom_vline(aes(xintercept=grp.mean), linetype="dashed") +
theme_pander()
mu <- behav %>% group_by(material) %>% summarize(alpha=mean(alpha))
p1 <- ggplot(behav, aes(x=alpha, fill=material)) +
geom_histogram(col="white", binwidth = 0.025, alpha=0.5, position="identity") +
#geom_density(aes(fill=material), colour="white", position="dodge", alpha=0.5, bw=0.025) +
scale_color_brewer(palette = "Set1") +
scale_fill_brewer(palette = "Set1") +
#  geom_vline(aes(fun.data=mean_se, xintercept=material), linetype="dashed") +
geom_vline(data=mu, aes(xintercept=alpha, color=material),
linetype="dashed") +
xlab(expression(paste("Estimated value of ", alpha))) +
theme_pander() +
ylab("Count") +
ggtitle("(A) Distribution By Materials") +
theme(legend.position = c(0.2, 0.8)) +
theme(plot.title = element_text(hjust = 0.5))
p2 <- ggplot(wbehav, aes(x=Vocabulary, y=Maps)) +
geom_point(size=4, alpha=0.5, col="black") + #col=K[7]) +
geom_smooth(method = "lm", formula = y ~ x, col="red", fill="red", fullrange = T, lwd=2) +
theme_pander() +
#stat_density_2d(col="red", alpha=0.2) +
scale_x_continuous() +
scale_y_continuous() +
ggtitle("(B) Correlation Across Materials") +
xlab(expression(paste(alpha, " Vocabulary"))) +
ylab(expression(paste(alpha, " Maps"))) +
geom_rug(col="black", lwd=1, alpha=.5) +
annotate("segment", x=0.1, y=0.1, xend=0.5,
yend=0.5, col="grey", lwd=1, lty=2) +
theme(plot.title = element_text(hjust = 0.5))
grid.arrange(p1, p2, ncol=2)
p3 <- ggplot(wbehav, aes(x=Vocabulary, y=Maps)) +
geom_point(size=4, alpha=0.5, col="black") + #col=K[7]) +
geom_smooth(method = "lm", formula = y ~ x, col="red", fill="red", fullrange = T, lwd=2) +
theme_pander() +
scale_x_continuous() +
scale_y_continuous() +
coord_fixed() +
ggtitle("Correlation of Alpha Parameters\nAcross Materials") +
xlab(expression(paste(alpha, " Vocabulary"))) +
ylab(expression(paste(alpha, " Maps"))) +
annotate("segment", x=0.1, y=0.1, xend=0.5,
yend=0.5, col="grey", lwd=1, lty=2) +
annotate("text", label = paste("R =", round(cor(wbehav$Vocabulary,
wbehav$Maps),
2)),
x=0.2, y=0.45, col="red") +
theme(plot.title = element_text(hjust = 0.5))
ggMarginal(p3, col="white", fill="black", alpha=0.5,
type="hist", bins=13)
summary(wbehav) %>%
xtable() %>%
kable(digits = 3) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
spectra <- NULL
for (sub in dir()[grep("A[1-9]", dir())]) {
table <- read_tsv(paste(sub, "/", sub, "_closed_spectra.txt", sep=""),
col_types = cols())
if (is.null(spectra)) {
spectra <- table
} else {
spectra <- spectra %>% bind_rows(table)
}
}
lspectra <- pivot_longer(spectra, cols=names(spectra)[3:130], names_to="Freq")
lspectra <- lspectra %>% rename(Power = value)
#lspectra <- lspectra %>% mutate(Power = exp(Power))
lspectra$Frequency <- as.numeric(substr(lspectra$Freq, 0, str_length(lspectra$Freq) -2))
lspectra <- lspectra %>% add_column(Band="Delta", BandMin=0, BandMax=4)
lspectra$Band[lspectra$Frequency <= 40] <- "Gamma"
lspectra$Band[lspectra$Frequency < 30] <- "High Beta"
lspectra$Band[lspectra$Frequency < 18] <- "Upper Beta"
lspectra$Band[lspectra$Frequency < 15] <- "Low Beta"
lspectra$Band[lspectra$Frequency < 13] <- "Alpha"
lspectra$Band[lspectra$Frequency < 8] <- "Theta"
lspectra$Band[lspectra$Frequency < 4] <- "Delta"
lspectra$BandMin[lspectra$Frequency <= 40] <- 30
lspectra$BandMin[lspectra$Frequency < 30] <- 18
lspectra$BandMin[lspectra$Frequency < 18] <- 13 #15
lspectra$BandMin[lspectra$Frequency < 15] <- 13
lspectra$BandMin[lspectra$Frequency < 13] <- 8
lspectra$BandMin[lspectra$Frequency < 8] <- 4
lspectra$BandMin[lspectra$Frequency < 4] <- 0
lspectra$BandMax[lspectra$Frequency <= 40] <- 40
lspectra$BandMax[lspectra$Frequency < 30] <- 30
lspectra$BandMax[lspectra$Frequency < 18] <- 18
lspectra$BandMax[lspectra$Frequency < 15] <- 15
lspectra$BandMax[lspectra$Frequency < 13] <- 13
lspectra$BandMax[lspectra$Frequency < 8] <- 8
lspectra$BandMax[lspectra$Frequency < 4] <- 4
lspectra$Band <- factor(lspectra$Band,
levels = c("Delta", "Theta", "Alpha",
"Low Beta", "Upper Beta",
"High Beta", "Gamma"))
lspectra <- lspectra %>%
filter(Subject %in% behav$Subject)
gd <- lspectra %>%
group_by(Band) %>%
summarise(
Min = mean(BandMin),
Max = mean(BandMax),
Power =mean(Power),
Frequency = mean(BandMin)
#Channel=
)
ggplot(data=lspectra, aes(x=Frequency, y=Power, Channel)) +
geom_rect(data = gd, aes(xmin=Min, xmax=Max, fill=Band),  ymin=0, ymax=Inf, colour=NA, alpha=0.5) +
stat_summary(#aes(fill=Channel),
fun.data=mean_sdl,
geom="ribbon", colour="white", alpha=0.4) +
stat_summary(fun.y=mean, geom="line", lwd=1) +
facet_wrap(~ Channel, ncol=4) +
scale_alpha_manual(values = seq(0.1, 0.9, 0.1)) +
ggtitle("Power Spectrum Across Channels") +
ylab("Log Power") +
xlab("Frequency (Hz)") +
theme_pander() +
coord_cartesian(xlim=c(1,40), ylim=c(5, 17)) + #ylim=c(5,17)) +
scale_fill_brewer(palette = "Set3") +
theme(plot.title = element_text(hjust = 0.5))
K = brewer.pal(7, "Set3")
alspectra <- aggregate(lspectra[c("Power")],
list(Subject=lspectra$Subject,
Frequency=lspectra$Frequency,
Band=lspectra$Band),
mean)
ggplot(data=alspectra, aes(x=Frequency, y=Power, col=Power)) +
annotate("rect", xmin = 0, xmax = 4, ymin = 0, ymax = Inf,
alpha = 0.5, fill=K[1]) +
annotate("rect", xmin = 4, xmax = 8, ymin = 0, ymax = Inf,
alpha = 0.5, fill=K[2]) +
annotate("rect", xmin = 8, xmax = 13, ymin = 0, ymax = Inf,
alpha = 0.5, fill=K[3]) +
annotate("rect", xmin = 13, xmax = 15, ymin = 0, ymax = Inf,
alpha = 0.5, fill=K[4]) +
annotate("rect", xmin = 15, xmax = 18, ymin = 0, ymax = Inf,
alpha = 0.5, fill = K[5]) +
annotate("rect", xmin = 18, xmax = 30, ymin = 0, ymax = Inf,
alpha = 0.5, fill=K[6]) +
annotate("rect", xmin = 30, xmax = 40, ymin = 0, ymax = Inf,
alpha = 0.5, fill=K[7]) +
stat_summary(fun.data=mean_sdl, geom="ribbon",
alpha=0.5, fill="grey50") +
stat_summary(fun.y=mean, geom="line", lwd=2) +
coord_cartesian(xlim=c(0,40), ylim=c(5,18)) +
xlab("Frequency (Hz)") +
theme_pander() +
annotate("text", x=2, y=5, label="Delta", angle=90, hjust=0) +
annotate("text", x=6, y=5, label="Theta", angle=90, hjust=0) +
annotate("text", x=10.5, y=5, label="Alpha", angle=90, hjust=0) +
annotate("text", x=14, y=5, label="Low Beta", angle=90, hjust=0) +
annotate("text", x=16.5, y=5, label="Upper Beta", angle=90, hjust=0) +
annotate("text", x=24, y=5, label="High Beta", angle=90, hjust=0) +
annotate("text", x=35, y=5, label="Gamma", angle=90, hjust=0)
K = brewer.pal(7, "Set3")
alspectra <- aggregate(lspectra[c("Power")],
list(Subject=lspectra$Subject,
Frequency=lspectra$Frequency,
Band=lspectra$Band),
mean)
ggplot(data=alspectra, aes(x=Frequency, y=Power, col=Power)) +
annotate("rect", xmin = 0, xmax = 4, ymin = 0, ymax = Inf,
alpha = 0.5, fill=K[1]) +
annotate("rect", xmin = 4, xmax = 8, ymin = 0, ymax = Inf,
alpha = 0.5, fill=K[2]) +
annotate("rect", xmin = 8, xmax = 13, ymin = 0, ymax = Inf,
alpha = 0.5, fill=K[3]) +
annotate("rect", xmin = 13, xmax = 15, ymin = 0, ymax = Inf,
alpha = 0.5, fill=K[4]) +
annotate("rect", xmin = 15, xmax = 18, ymin = 0, ymax = Inf,
alpha = 0.5, fill = K[5]) +
annotate("rect", xmin = 18, xmax = 30, ymin = 0, ymax = Inf,
alpha = 0.5, fill=K[6]) +
annotate("rect", xmin = 30, xmax = 40, ymin = 0, ymax = Inf,
alpha = 0.5, fill=K[7]) +
stat_summary(fun.data=mean_sdl, geom="ribbon",
alpha=0.5, fill="grey50") +
stat_summary(fun.y=mean, geom="line", lwd=2) +
coord_cartesian(xlim=c(0,40), ylim=c(5,18)) +
xlab("Frequency (Hz)") +
theme_pander() +
annotate("text", x=2, y=5, label="Delta", angle=90, hjust=0) +
annotate("text", x=6, y=5, label="Theta", angle=90, hjust=0) +
annotate("text", x=10.5, y=5, label="Alpha", angle=90, hjust=0) +
annotate("text", x=14, y=5, label="Low Beta", angle=90, hjust=0) +
annotate("text", x=16.5, y=5, label="Upper Beta", angle=90, hjust=0) +
annotate("text", x=24, y=5, label="High Beta", angle=90, hjust=0) +
annotate("text", x=35, y=5, label="Gamma", angle=90, hjust=0)
wbehav <- wbehav %>%
mutate(GlobalAlpha=(Vocabulary + Maps)/2)
Adata <- lspectra %>% group_by(Subject, Channel, Band) %>% summarize(Power=mean(Power))
Cdata <- group_by(Adata, Channel, Band) %>%
summarize(VocabR = cor(Power, wbehav$Vocabulary),
MapsR = cor(Power, wbehav$Maps),
GlobalR = cor(Power, wbehav$GlobalAlpha),
VocabP = cor.test(Power, wbehav$Vocabulary)$p.value,
MapsP = cor.test(Power, wbehav$Maps)$p.value,
GlobalP = cor.test(Power, wbehav$GlobalAlpha)$p.value)
p1 <-ggplot(Cdata, aes(x=Channel, y=VocabR, col=Band)) +
geom_point() +
stat_summary(fun.data = "mean_se", col="black", alpha=0.5, geom = "errorbar") +
ggtitle("Vocab, By Channel") +
annotate("segment", x=-Inf, xend=Inf, y=0.28, yend = 0.28, lty=2) +
annotate("segment", x=-Inf, xend=Inf, y=-0.28, yend = -0.28, lty=2) +
theme_pander()
p2 <- ggplot(Cdata, aes(x=Band, y=VocabR, col=Channel)) +
geom_point() +
stat_summary(fun.data = "mean_se", col="black", alpha=0.5, geom = "errorbar") +
ggtitle("Vocab, by Band") +
annotate("segment", x=-Inf, xend=Inf, y=0.28, yend = 0.28, lty=2) +
annotate("segment", x=-Inf, xend=Inf, y=-0.28, yend = -0.28, lty=2) +
theme_pander()
p3 <-ggplot(Cdata, aes(x=Channel, y=GlobalR, col=Band)) +
geom_point() +
stat_summary(fun.data = "mean_se", col="black", alpha=0.5, geom = "errorbar") +
ggtitle("Global, By Channel") +
annotate("segment", x=-Inf, xend=Inf, y=0.28, yend = 0.28, lty=2) +
annotate("segment", x=-Inf, xend=Inf, y=-0.28, yend = -0.28, lty=2) +
theme_pander()
p4 <- ggplot(Cdata, aes(x=Band, y=GlobalP, col=Channel)) +
geom_point() +
stat_summary(fun.data = "mean_se", col="black", alpha=0.5, geom = "errorbar") +
ggtitle("Global, by Band") +
annotate("segment", x=-Inf, xend=Inf, y=0.28, yend = 0.28, lty=2) +
annotate("segment", x=-Inf, xend=Inf, y=-0.28, yend = -0.28, lty=2) +
annotate("segment", x=-Inf, xend=Inf, y=0.05, yend = 0.05, lty=2) +
scale_y_log10() +
theme_pander()
grid.arrange(p1, p2, p3, p4, ncol=2)
Cdata
p.adjust(Cdata$VocabP)
p.adjust(Cdata$GlobalP)
p.adjust(Cdata$VocabP[Cdata$Band=="Low Beta"]])
p.adjust(Cdata$VocabP[Cdata$Band=="Low Beta"])
p.adjust(Cdata$VocabP[Cdata$Band=="Alpha"])
p.adjust(Cdata$VocabP[Cdata$Band=="Mid Beta"])
View(Cdata)
p.adjust(Cdata$VocabP[Cdata$Band=="High Beta"])
p.adjust(Cdata$VocabP[Cdata$Band=="Low Beta"])
p.adjust(Cdata$VocabP[Cdata$Band=="Theta"])
p.adjust(Cdata$MapsP[Cdata$Band=="Theta"])
p.adjust(Cdata$MapsP[Cdata$Band=="Low Beta"])
?p.adjust
p.adjust(Cdata$VocabP[Cdata$Band=="Low Beta"])
p.adjust(Cdata$VocabP[Cdata$Band=="Low Beta"], method="hochberg")
p.adjust(Cdata$VocabP[Cdata$Band=="Low Beta"], method="holm")
p.adjust(Cdata$VocabP[Cdata$Band=="Low Beta"], method="hommel")
p.adjust(Cdata$MapsP[Cdata$Band=="Low Beta"], method="hommel")
p.adjust(Cdata$MapsP[Cdata$Band=="Low Beta"], method="BY")
p.adjust(Cdata$MapsP[Cdata$Band=="Low Beta"], method="BH")
p.adjust(Cdata$VocabP[Cdata$Band=="Low Beta"], method="BH")
p.adjust(Cdata$VocabP[Cdata$Band %in% c("Low Beta", "Alpha")], method="BH")
p.adjust(Cdata$VocabP[Cdata$Band %in% c("Low Beta", "Alpha", "Theta")], method="BH")
p.adjust(Cdata$VocabP[Cdata$Band %in% c("Low Beta", "Alpha", "Upper Beta")], method="BH")
p.adjust(Cdata$VocabP[Cdata$Band %in% c("Low Beta", "High Beta", "Upper Beta")], method="BH")
min(p.adjust(Cdata$VocabP[Cdata$Band %in% c("Low Beta", "High Beta", "Upper Beta")], method="BH"))
min(p.adjust(Cdata$VocabP[Cdata$Band %in% c("Low Beta", "High Beta", "Upper Beta")], method="BY"))
min(p.adjust(Cdata$VocabP[Cdata$Band %in% c("Low Beta", "High Beta", "Upper Beta")], method="holm"))
min(p.adjust(Cdata$VocabP[Cdata$Band %in% c("Low Beta", "High Beta", "Upper Beta")], method="hoch"))
min(p.adjust(Cdata$VocabP[Cdata$Band %in% c("Low Beta", "High Beta", "Upper Beta")], method="homm"))
min(p.adjust(Cdata$VocabP[Cdata$Band %in% c("Low Beta", "High Beta", "Upper Beta")], method="fdr"))
min(p.adjust(Cdata$VocabP[Cdata$Band %in% c("Low Beta", "High Beta", "Upper Beta", "Delta")], method="fdr"))
min(p.adjust(Cdata$VocabP[Cdata$Band %in% c("Low Beta", "High Beta", "Upper Beta", "Delta", "Gamma")], method="fdr"))
min(p.adjust(Cdata$VocabP[Cdata$Band %in% c("Low Beta", "High Beta", "Upper Beta", "Delta", "Gamma", "Theta")], method="fdr"))
min(p.adjust(Cdata$VocabP[Cdata$Band %in% c("Low Beta", "High Beta", "Upper Beta", "Delta", "Gamma", "Theta", "Alpha")], method="fdr"))
min(p.adjust(Cdata$VocabP[Cdata$Band %in% c("Low Beta", "High Beta", "Upper Beta", "Theta", "Alpha")], method="fdr"))
min(p.adjust(Cdata$VocabP[Cdata$Band %in% c("Low Beta", "Theta", "Alpha")], method="fdr"))
min(p.adjust(Cdata$VocabP[Cdata$Band %in% c("Low Beta", )], method="fdr"))
min(p.adjust(Cdata$VocabP[Cdata$Band %in% c("Low Beta",)], method="fdr"))
min(p.adjust(Cdata$VocabP[Cdata$Band %in% c("Low Beta")], method="fdr"))
min(p.adjust(Cdata$VocabP[Cdata$Band %in% c("Low Beta")], method="BH"))
Cdata <- Cdata %>%
group_by(Channel, Band) %>%
mutate(Q = p.adjust(VocabP))
Cdata
View(Cdata)
behav
View(Adata)
inner_join(Adata, behav)
Cdata <- inner_join(Adata, behav)
Cdata
View(Cdata)
Cdata <- Cdata %>%
group_by(material, Channel, Band) %>%
summarise(r = cor(Power, alpha),
p = cor.test(Power, wbehav$Vocabulary)$p.value)
View(Cdata)
Cdata <- Cdata %>%
group_by(material, Channel, Band) %>%
mutate(q = p.adjust(p)) %>%
ungroup()
View(Cdata)
min(Cdata$q)
Adata <- lspectra %>% group_by(Subject, Channel, Band) %>% summarize(Power=mean(Power))
Cdata <- inner_join(Adata, behav)
Cdata <- Cdata %>%
group_by(material, Channel, Band) %>%
summarise(r = cor(Power, alpha),
p = cor.test(Power, wbehav$Vocabulary)$p.value)
Cdata <- Cdata %>%
group_by(material, Channel, Band) %>%
mutate(q = p.adjust(p)) %>%
View(Cdata)
Cdata
Cdata <- inner_join(Adata, behav)
Cdata <- Cdata %>%
group_by(material, Channel, Band) %>%
summarise(r = cor(Power, alpha),
p = cor.test(Power, wbehav$Vocabulary)$p.value)
View(Cdata)
Cdata <- Cdata %>%
group_by(material, Channel, Band) %>%
mutate(q = p.adjust(p))
View(Cdata)
Cdata <- Cdata %>%
group_by(material, Band) %>%
mutate(q = p.adjust(p))
View(Cdata)
Cdata <- Cdata %>%
group_by(material, Band) %>%
mutate(q = p.adjust(p, method="BH"))
min(Cdata$q)
Cdata %>%
xtable() %>%
kable(digits = 3) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
p1 <-ggplot(Cdata, aes(x=Band, y=r, col=Channel)) +
geom_point() +
stat_summary(fun.data = "mean_se", col="black", alpha=0.5, geom = "errorbar") +
facet_wrap(~ material)
ggtitle("Correlation, By Channel") +
annotate("segment", x=-Inf, xend=Inf, y=0.28, yend = 0.28, lty=2) +
annotate("segment", x=-Inf, xend=Inf, y=-0.28, yend = -0.28, lty=2) +
theme_pander()
p2 <- ggplot(Cdata, aes(x=Band, y=p, col=Channel)) +
geom_point() +
stat_summary(fun.data = "mean_se", col="black", alpha=0.5, geom = "errorbar") +
ggtitle("Global, by Band") +
annotate("segment", x=-Inf, xend=Inf, y=0.28, yend = 0.28, lty=2) +
annotate("segment", x=-Inf, xend=Inf, y=-0.28, yend = -0.28, lty=2) +
annotate("segment", x=-Inf, xend=Inf, y=0.05, yend = 0.05, lty=2) +
scale_y_log10() +
theme_pander()
grid.arrange(p1, p2, ncol=2)
p1 <-ggplot(Cdata, aes(x=Band, y=r, col=Channel)) +
geom_point() +
stat_summary(fun.data = "mean_se", col="black", alpha=0.5, geom = "errorbar") +
facet_wrap(~ material) +
ggtitle("Correlation, By Channel") +
annotate("segment", x=-Inf, xend=Inf, y=0.28, yend = 0.28, lty=2) +
annotate("segment", x=-Inf, xend=Inf, y=-0.28, yend = -0.28, lty=2) +
theme_pander()
p2 <- ggplot(Cdata, aes(x=Band, y=p, col=Channel)) +
geom_point() +
stat_summary(fun.data = "mean_se", col="black", alpha=0.5, geom = "errorbar") +
ggtitle("Global, by Band") +
annotate("segment", x=-Inf, xend=Inf, y=0.28, yend = 0.28, lty=2) +
annotate("segment", x=-Inf, xend=Inf, y=-0.28, yend = -0.28, lty=2) +
annotate("segment", x=-Inf, xend=Inf, y=0.05, yend = 0.05, lty=2) +
scale_y_log10() +
theme_pander()
grid.arrange(p1, p2, ncol=2)
ggplot(Cdata, aes(x=Band, y=r, col=Channel)) +
geom_point() +
stat_summary(fun.data = "mean_se", col="black", alpha=0.5, geom = "errorbar") +
facet_wrap(~ material) +
ggtitle("Correlation, by Band") +
ylab("r value") +
annotate("segment", x=-Inf, xend=Inf, y=0.28, yend = 0.28, lty=2) +
annotate("segment", x=-Inf, xend=Inf, y=-0.28, yend = -0.28, lty=2) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme_pander()
ggplot(Cdata, aes(x=Band, y=p, col=Channel)) +
geom_point() +
stat_summary(fun.data = "mean_se", col="black", alpha=0.5, geom = "errorbar") +
ggtitle("p-value, by Band") +
ylab("p value") +
facet_wrap(~ material) +
annotate("segment", x=-Inf, xend=Inf, y=0.28, yend = 0.28, lty=2) +
annotate("segment", x=-Inf, xend=Inf, y=-0.28, yend = -0.28, lty=2) +
annotate("segment", x=-Inf, xend=Inf, y=0.05, yend = 0.05, lty=2) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_y_log10() +
theme_pander()
wbehav <- wbehav %>%
mutate(GlobalAlpha=(Vocabulary + Maps)/2)
Adata <- lspectra %>% group_by(Subject, Channel, Band) %>% summarize(Power=mean(Power))
Cdata <- inner_join(Adata, behav)
Cdata <- Cdata %>%
group_by(material, Channel, Band) %>%
summarise(r = cor(Power, alpha),
p = cor.test(Power, alpha)$p.value)
Cdata <- Cdata %>%
group_by(material, Band) %>%
mutate(q = p.adjust(p, method="BH"))
ggplot(Cdata, aes(x=Band, y=r, col=Channel)) +
geom_point() +
stat_summary(fun.data = "mean_se", col="black", alpha=0.5, geom = "errorbar") +
facet_wrap(~ material) +
ggtitle("Correlation, by Band") +
ylab("r value") +
annotate("segment", x=-Inf, xend=Inf, y=0.28, yend = 0.28, lty=2) +
annotate("segment", x=-Inf, xend=Inf, y=-0.28, yend = -0.28, lty=2) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme_pander()
ggplot(Cdata, aes(x=Band, y=p, col=Channel)) +
geom_point() +
stat_summary(fun.data = "mean_se", col="black", alpha=0.5, geom = "errorbar") +
ggtitle("p-value, by Band") +
ylab("p value") +
facet_wrap(~ material) +
annotate("segment", x=-Inf, xend=Inf, y=0.05, yend = 0.05, lty=2) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_y_log10() +
theme_pander()
wbehav <- wbehav %>%
mutate(GlobalAlpha=(Vocabulary + Maps)/2)
Adata <- lspectra %>% group_by(Subject, Channel, Band) %>% summarize(Power=mean(Power))
Cdata <- inner_join(Adata, behav, by="Subject")
Cdata <- Cdata %>%
group_by(material, Channel, Band) %>%
summarise(r = cor(Power, alpha),
p = cor.test(Power, alpha)$p.value)
Cdata <- Cdata %>%
group_by(material, Band) %>%
mutate(q = p.adjust(p, method="BH"))
