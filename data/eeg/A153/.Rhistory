source('~/Documents/Research/Antelope/Raw/eeg.analysis.3.1.4.R', echo=TRUE)
setwd("~/Documents/Research/Antelope/Raw/5mins_Eyes_Closed_EEG")
analyze.logfile("A205", "closed")
dir()
setwd("A151")
setwd("..")
if (process_raw) {
for (sub in dir()) {
setwd(sub)
analyze.logfile(sub, "closed")
setwd(..)
}
}
for (sub in dir()) {
setwd(sub)
analyze.logfile(sub, "closed")
setwd(..)
}
for (sub in dir()) {
print(sub); setwd(sub)
analyze.logfile(sub, "closed")
setwd(..)
}
setwd("..")
for (sub in dir()) {
print(sub); setwd(sub)
analyze.logfile(sub, "closed")
setwd(..)
}
setwd("..")
analyze.logfile("A166", "closed")
setwd("A166")
analyze.logfile("A166", "closed")
z<-read.csv("A166_closed.csv", header=T)
plot(z$P8)
plot(z$P8)
mean(z$P8)
sd(z$P8)
spec.pgram(z$P8)
dev.off()
spec.pgram(z$P8)
plot(z$P8)
lines(z$Blink)
lines(z$Blink*5000)
lines(z$P7)
plot(z$P7, type="L")
plot(z$P7, type="l")
plot(z$P8, type="l")
plot(z$P7, type="l")
spectral.analysis(z$P7, sampling = 128, length = 2, sliding = 0.75, x=z$GyroX, y=z$GyroY, blink = z$Blink, quality = z$P8_Q)
s<-spectral.analysis(z$P7, sampling = 128, length = 2, sliding = 0.75, x=z$GyroX, y=z$GyroY, blink = z$Blink, quality = z$P8_Q)
iaf(s$Spectrum)
iaf(Spectrum)
iaf(s)
s<-spectral.analysis(z$P7, sampling = 128, length = 2, sliding = 0.75, x=z$GyroX, y=z$GyroY, blink = z$Blink, quality = z$P8_Q, hamming = T)
s
analyze.logfile("A166", "closed")
iaf(s)
s$Samples
source('~/Documents/Research/Antelope/Raw/eeg.analysis.3.1.4.R', echo=TRUE)
analyze.logfile("A166", "closed")
spike_cutoff
s<-spectral.analysis(z$P8, sampling = 128, length = 2, sliding = 0.75, x=z$GyroX, y=z$GyroY, blink = z$Blink, quality = z$P8_Q, hamming = T)
s
setwd("..")
dir()
setwd("5mins_Eyes_Closed_EEG/")
dir()
grep(dir(), "A")
grep("A", dir())
dir()[56]
??grep
?grep
grep("A[1-9]", dir())
for (sub in dir()[16:55]) {
print(sub); setwd(sub)
analyze.logfile(sub, "closed")
setwd(..)
}
setwd("..")
for (sub in dir()[17:54]) {
print(sub); setwd(sub)
analyze.logfile(sub, "closed")
setwd("..")
}
setwd("A205")
analyze.logfile("A205", "closed")
setwd("..")
library(tidyverse)
library(kableExtra)
library(xtable)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
spectra <- NULL
for (sub in dir(grep("A[1-9]", dir()))) {
table <- read.table(paste(sub, "/", sub, "_closed_spectra.txt"),
header=T)
if (is.null(spectra)) {
spectra <- table
} else {
spectra <- cbind(spectra, table)
}
}
spectra <- NULL
for (sub in dir(grep("A[1-9]", dir()))) {
table <- read.table(paste(sub, "/", sub, "_closed_spectra.txt"),
header=T)
if (is.null(spectra)) {
spectra <- table
} else {
spectra <- cbind(spectra, table)
}
}
summary <- NULL
dir()
for (sub in dir()[grep("A[1-9]", dir()) {
spectra <- NULL
for (sub in dir()[grep("A[1-9]", dir())]) {
table <- read.table(paste(sub, "/", sub, "_closed_spectra.txt"),
header=T)
if (is.null(spectra)) {
spectra <- table
} else {
spectra <- cbind(spectra, table)
}
}
for (sub in dir()[grep("A[1-9]", dir())]) {
table <- read.table(paste(sub, "/", sub, "_closed_spectra.txt", sep=""),
header=T)
if (is.null(spectra)) {
spectra <- table
} else {
spectra <- cbind(spectra, table)
}
}
dim(spectra)\
dim(spectra)
spectra <- NULL
for (sub in dir()[grep("A[1-9]", dir())]) {
table <- read.table(paste(sub, "/", sub, "_closed_spectra.txt", sep=""),
header=T)
if (is.null(spectra)) {
spectra <- table
} else {
spectra <- rbind(spectra, table)
}
}
spectra <- NULL
spectra <- NULL
for (sub in dir()[grep("A[1-9]", dir())]) {
table <- read.table(paste(sub, "/", sub, "_closed_spectra.txt", sep=""),
header=T)
if (is.null(spectra)) {
spectra <- table
} else {
spectra <- rbind(spectra, table)
}
}
dim(spectra)
plot(colMeans(spectra)
)
spectra
names(spectra)
names(spectra[,2:130])
colMeans(spectra[,2:130])
spectra[,2:130]
spectra[,3:130]
colMeans(spectra[,3:130])
plot(colMeans(spectra[,3:130]))
plot(colMeans(spectra[,3:83]))
plot(colMeans(spectra[,3:83]), ylim=c(8,14), type="l")
summary <- NULL
for (sub in dir()[grep("A[1-9]", dir())]) {
table <- read.table(paste(sub, "/", sub, "_closed_summary.txt", sep=""),
header=T)
if (is.null(spectra)) {
spectra <- table
} else {
spectra <- rbind(spectra, table)
}
}
summary <- NULL
for (sub in dir()[grep("A[1-9]", dir())]) {
table <- read.table(paste(sub, "/", sub, "_closed_summary.txt", sep=""),
header=T)
if (is.null(spectra)) {
summary <- table
} else {
summary <- rbind(spectra, table)
}
}
summary <- NULL
for (sub in dir()[grep("A[1-9]", dir())]) {
table <- read.table(paste(sub, "/", sub, "_closed_summary.txt", sep=""),
header=T)
if (is.null(summary)) {
summary <- table
} else {
summary <- rbind(summary, table)
}
}
behav <- read.table("../../behav_data.txt",
header=T, sep="\t")
behav
dim(behav)
behav <- read.table("../../behav_data.txt",
header=T, sep="\t")
dim(behav)
vocab <- subset(behav, behav$material=="Swahili")
dim(vocab)
names(vocab)
names(summary)
names(summary)[1:10]
res<-merge(summary, vocab, all = T)
dim(res)
dim(summary)
report <- subset(res, !is.na(material))
dim(report)
cor(report$alpha, report$P8_mean_Low.Beta_power)
report$alpha
report$P8_mean_Low.Beta_power
res<-merge(summary, vocab, all = T)
report <- subset(res, !is.na(res$material))
report <- subset(res, !is.na(res$P8_mean_Low.Beta_power))
cor(report$alpha, report$P8_mean_Low.Beta_power)
report <- subset(res, !is.na(res$material))
report <- subset(report, !is.na(res$P8_mean_Low.Beta_power))
cor(report$alpha, report$P8_mean_Low.Beta_power)
dim(report)
report <- subset(res, !is.na(report$material))
report <- subset(report, !is.na(report$P8_mean_Low.Beta_power))
dim(report)
cor(report$alpha, report$P8_mean_Low.Beta_power)
report$P8_mean_Low.Beta_power
report$alpha
View(report)
res<-merge(summary, vocab, by="Subject", all = T)
report <- subset(res, !is.na(report$alpha))
report <- subset(report, !is.na(report$P8_mean_Low.Beta_power))
dim(report)
report$alpha
report$P8_mean_Low.Beta_power
cor(report$alpha, report$P8_mean_Low.Beta_power)
cor(report$alpha, report$T8_mean_Low.Beta_power)
cor(report$alpha, report$P8_mean_Upper.Beta_power)
cor(report$alpha, report$AF4_mean_Upper.Beta_power)
cor(report$alpha, report$AF3_mean_Upper.Beta_power)
cor(report$alpha, report$AF3_mean_Alpha_power)
cor(report)
names(report)
cor(report[,10:814])
plot(cor(report[,10:814]))
imageplot(cor(report[,10:814]))
image(cor(report[,10:814]))
corm<-cor(report[,10:814])
max(corm)
hist(corm)
corm[corm> 0.5]
plot(cor(report[,10:40]))
image(cor(report[,10:70]))
corm<-cor(report[,10:70])
colNames(corm)
colnames(corm)
rownames(corm)
heatmap(cor(report[,10:70]))
names(report)
heatmap(cor(report[,c(10:70, 819)]))
cor(report$alpha, report$AF3_mean_Low.Beta_power)
cor(report$alpha, report$AF4_mean_Low.Beta_power)
cor(report$alpha, report$F7_mean_Low.Beta_power)
cor(report$alpha, report$F8_mean_Low.Beta_power)
cor(report$alpha, report$F3_mean_Low.Beta_power)
cor(report$alpha, report$F4_mean_Low.Beta_power)
cor(report$alpha, report$FC5_mean_Low.Beta_power)
cor(report$alpha, report$FC6_mean_Low.Beta_power)
cor(report$alpha, report$T7_mean_Low.Beta_power)
cor(report$alpha, report$T8_mean_Low.Beta_power)
cor(report$alpha, report$P8_mean_Low.Beta_power)
cor(report$alpha, report$P7_mean_Low.Beta_power)
cor(report$alpha, report$O1_mean_Low.Beta_power)
cor(report$alpha, report$O2_mean_Low.Beta_power)
setwd("A153")
spike_cutoff <- 30000
analyze.logfile("A153", "closed")
spike_cutoff
cor(report$alpha, report$T7_IAF)
cor(report$alpha, report$P7_IAF)
min(corm)
cor(report$alpha, report$O1_IAF)
cor(report$alpha, report$O2_IAF)
?verbose
?heatmap
heatmap(cor(report[,c(10:70, 819)]), Rowv=NA, Colv=NA)
?heatmap
library(matlab)
heatmap(cor(report[,c(10:70, 819)]), Rowv=NA, Colv=NA, col=jet.colors(20))
cor(report$alpha, report$P7_mean_Delta_power)
source('~/Documents/Research/QEEG/eeg.analysis.3.1.3.R', echo=TRUE)
analyze.logfile("A153", "closed")
setwd("A153")
setwd("..")
setwd("A153")
vocab <- subset(behav, behav$material=="US Maps")
res<-merge(summary, vocab, by="Subject", all = T)
report <- subset(res, !is.na(report$alpha))
report <- subset(report, !is.na(report$P8_mean_Low.Beta_power))
dim(report)
cor(report$alpha, report$P7_mean_Delta_power)
report$P7_mean_Delta_power
report$alpha
res<-merge(summary, vocab, by="Subject", all = T)
report <- subset(res, !is.na(res$alpha))
report <- subset(report, !is.na(report$P8_mean_Low.Beta_power))
cor(report$alpha, report$P7_mean_Delta_power)
cor(report$alpha, report$P8_mean_Low.Beta_power)
cor(report$alpha, report$T8_mean_Low.Beta_power)
